# This is a basic workflow to help you get started with Actions
name: CI-CD Pipeline - Automate

# Controls when the action will run.
on:
  # Triggers the workflow on push request events but only for the main branch
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # This job will run on the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: 18.x

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the application
      - name: Build
        run: npm run build

  test:
    # This job depends on the build job
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: 18.x

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Test
        run: npm test

  push_to_Docker_Hub:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [test]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/reactsample:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/reactsample:latest
          run: |
            echo "running the docker image"

  push_to_vercel:
    runs-on: ubuntu-latest
    needs: [push_to_Docker_Hub]
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: "--prod"
