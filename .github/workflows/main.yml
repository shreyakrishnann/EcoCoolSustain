name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the code
      run: npm run build

    - name: Run tests
      run: npm test

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        organization: ${{ secrets.SONAR_ORGANIZATION }}
        scannerMode: 'CLI'
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t my-app .
        docker images my-app --format "{{.Size}}"
      id: docker_size_check

    - name: Check Docker image size
      run: |
        SIZE=$(docker inspect my-app --format='{{.Size}}')
        if [ $SIZE -gt 10000000 ]; then
          echo "Docker image is larger than 10MB!"
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push my-app

    - name: Deploy to Vercel
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        npx vercel container deploy --name my-app --dockerfile Dockerfile --confirm
